{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;AClHiC;AACpD;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,cAAc;AACd,wFAAwF;AACxF;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAW;AACf;AACA,uBAAuB,iCAAiC,gBAAgB;AACxE;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC,iCAAiC,gBAAgB;AACjF,gGAAgG;AAChG,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACjE0B;AACG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,wCAAwC;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,+CAA+C;AAC/C;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,oFAAoF;AACpF;AACA,kEAAkE;AAClE;AACA;AACA,YAAY,+DAAQ;AACpB;AACA;AACA;AACA,gEAAgE;AAChE,gEAAgE;AAChE,aAAa;AACb,gEAAgE;AAChE,aAAa;AACb,gEAAgE;AAChE,aAAa;AACb;AACA,kEAAkE;AAClE,gEAAgE;AAChE;AACA,kEAAkE;AAClE;AACA;AACA,oEAAoE;AACpE,oEAAoE;AACpE,oEAAoE;AACpE,kBAAkB;AAClB,oEAAoE;AACpE;AACA,aAAa,EAAE;AACf,SAAS;AACT;AACA;AACA,mEAAmE;AACnE;AACA;AACA,4DAA4D;AAC5D,QAAQ,iDAAS,iEAAiE;AAClF;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA,gEAAgE;AAChE;AACA,gEAAgE;AAChE,gEAAgE;AAChE;AACA,YAAY,kDAAU,kDAAkD;AACxE,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrGpB;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,sFAAsF;AACtF,KAAK;AACL;AACA;AACA;AACA,oDAAoD;AACpD,qFAAqF;AACrF,gEAAgE;AAChE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oDAAoD;AACpD,0EAA0E;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;AChErB,iBAAiB;AACjB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,wDAAwD;AACxD,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4DAA4D;AAC5D;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO,QAAQ;AACpE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO,QAAQ;AACpE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO,QAAQ;AACxE;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACzJrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gDAAgD;AAChD,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI,EAAC,MAAM;;;;;;;;;;;;;;AC3C1B;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,gEAAgE;AAChE,gEAAgE;AAChE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC,MAAM;;;;;;;;;;;;;;;AC/D3B,4CAA4C;AAC5C;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA,0CAA0C;AAC1C;AACA;AACA;AACkB;;;;;;;UC1BlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACkC;AACE;AACF;AACE;AACA;AACE;AACF;AACM;AAC1C;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAK;AACT;AACA,CAAC","sources":["webpack://JS104/./js/modules/calc.js","webpack://JS104/./js/modules/cards.js","webpack://JS104/./js/modules/forms.js","webpack://JS104/./js/modules/modal.js","webpack://JS104/./js/modules/slider.js","webpack://JS104/./js/modules/tabs.js","webpack://JS104/./js/modules/timer.js","webpack://JS104/./js/services/services.js","webpack://JS104/webpack/bootstrap","webpack://JS104/webpack/runtime/define property getters","webpack://JS104/webpack/runtime/hasOwnProperty shorthand","webpack://JS104/webpack/runtime/make namespace object","webpack://JS104/./js/script.js"],"sourcesContent":["function calc() {\r\n    // Калькулятор\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent =  Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {                 // если не число\r\n                input.style.border = '1px solid red';       // красим рамку поля ввода\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services.js';\r\n\r\nfunction cards() {\r\n    // Используем классы для карточек\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {    // ...classes - передаём неограниченное количество операторов\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);       // родительский элемент, куда передаём вёрстку\r\n            this.transfer = 2.5;\r\n            this.changeToBYN();\r\n        }\r\n        changeToBYN() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) {   // если classes пустой, то присвоим нужный нам массив\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));    // назначаем каждый класс из массива элементам\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);                // помещаем элемент в родительский\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getResource('http://localhost:3000/menu')\r\n    .then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => {          // деструктуризация объекта\r\n            // создастся столько раз, сколько передаст объектов сервер\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n        });\r\n    });\r\n    \r\n    /*\r\n    axios.get('http://localhost:3000/menu')                 // axios берем из библиотеки\r\n        .then(data => {\r\n            data.data.forEach(({img, altimg, title, descr, price}) => {          // деструктуризация объекта\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();    // создастся столько раз, сколько передаст объектов сервер\r\n            });\r\n        });\r\n    */\r\n\r\n}\r\n\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services.js';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',                 // картинка вместо текста\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Ой-ёй-ёй, ой-ёй-ёй, что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {         // для каждой формы привязываем функцию postData\r\n        bindPostData(item);             // которая является обработчиком события при отправке\r\n    });\r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();                                     // без перезагрузки страницы\r\n\r\n            const statusMessage = document.createElement('img');    // создаём блок для сообщения\r\n            statusMessage.src = message.loading;                    // назначаем атрибут\r\n            // стиль\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);    // вставка сообщения после формы\r\n\r\n            /*const request = new XMLHttpRequest();\r\n            request.open('POST', 'server.php');*/\r\n\r\n           /*request.setRequestHeader('Content-type', 'multipart/form-data');    // заголовок говорит, что приходит\r\n           Когда используем связку XMLHttpRequest и FormData - заголовок устанавливать не нужно, он установится автоматически*/\r\n\r\n            // Отправляем информацию в JSON\r\n            //request.setRequestHeader('Content-type', 'application/json');\r\n            const formData = new FormData(form);        // собирает данные с формы\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));    // преобразуем объект в json\r\n\r\n            //const json = JSON.stringify(object);                // преобразуем новый объект в JSON\r\n\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            //.then(data => data.text())                        // преобразуем ответ в текст\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);               // модальное окно - успешно\r\n                statusMessage.remove();                         // удаляем сообщение через 3 сек                \r\n            }).catch(() => {\r\n                showThanksModal(message.failure);               // сообщение - ошибка\r\n            }).finally(() => {\r\n                form.reset();                                   // очищаем форму после отправки\r\n            });\r\n\r\n            //request.send(json);                                 // отправляем json\r\n            //request.send(formData);                           // отправляем данные\r\n\r\n/*            request.addEventListener('load', () => {            // отслеживаем загрузку запроса\r\n                if (request.status === 200) {\r\n                    console.log(request.response);\r\n                    showThanksModal(message.success);               // модальное окно - успешно\r\n                    form.reset();                                   // очищаем форму после отправки\r\n                    statusMessage.remove();                         // удаляем сообщение через 3 сек\r\n                } else {\r\n                    showThanksModal(message.failure);               // сообщение - ошибка\r\n                }\r\n            });*/\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {                            // функция нового модального окна после отправки\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');              // скрываем блок ввода данных юзера\r\n        openModal('.modal', modalTimerId);                                        // открываем модальное окно\r\n\r\n        const thanksModal = document.createElement('div');  // создаем новый блок\r\n        thanksModal.classList.add('modal__dialog');         // назначаем классы\r\n        // добавляем вёрстку в блок\r\n        thanksModal.innerHTML = `                           \r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);   // добавляем блок в модальное окно\r\n        setTimeout(() => {                                      \r\n            thanksModal.remove();                               // удаляем блок через 4 сек\r\n            prevModalDialog.classList.add('show');              // возвращаем первое модальное окно\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal('.modal');                                       // закрываем модальное окно\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    //modal.classList.toggle('show');           // переключаель. если класса нет, то добавим. если есть, то уберем\r\n    document.body.style.overflow = 'hidden';    // отключение прокрутки за модальным окном\r\n\r\n    console.log(modalTimerId);\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);                // очистка таймера, если окно уже было открыто\r\n    }\r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    modal.classList.add('hide');\r\n    modal.classList.remove('show');\r\n    //modal.classList.toggle('show');           // переключаель. если класса нет, то добавим. если есть, то уберем\r\n    document.body.style.overflow = '';          // возвращаем скролл\r\n}\r\n\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n    // Modal //\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),\r\n            modal = document.querySelector(modalSelector);\r\n\r\n\r\n    modalTrigger.forEach(btn => {                       // чтобы работало для любой кнопки, а не одной.\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));  // стрелочная обертка, чтобы функция не вызывалась без клика\r\n    });\r\n    \r\n\r\n    // Закрытие модального окна кликом по подложке\r\n    modal.addEventListener('click', (e) => {        // передаём объект события е\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {       // если место клика строго совпадаетс с модальным окном, а не модальным диалогом\r\n            closeModal(modalSelector);                          // то закрываем модальное окно\r\n    \r\n        }\r\n    });\r\n\r\n\r\n    // Закрытие модального окна нажатием Esc\r\n    // коды - https://www.toptal.com/developers/keycode\r\n    document.addEventListener('keydown', (e) => {   // событие нажатие кнопки\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) {    // если код Escape и модальное окно открыто\r\n            closeModal(modalSelector);  \r\n        }\r\n    });\r\n\r\n\r\n    function showModalByScroll() {          // показ модального окна при скроле\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            openModal(modalSelector, modalTimerId);\r\n            window.removeEventListener('scroll', showModalByScroll);    // удаляем обработчик после срабатывания\r\n        }\r\n    }\r\n\r\n    // Вызов модального окна, если проскролил до конца\r\n    window.addEventListener('scroll', showModalByScroll);\r\n\r\n}\r\n\r\nexport default modal;\r\nexport {closeModal, openModal};","function slider({container, slide, nextArrow,\r\n                prevArrow, totalCounter, currentCounter, \r\n                wrapper, field}) {\r\n    // Slider\r\n\r\n    const slides = document.querySelectorAll(slide),      // получаем элементы со страницы\r\n          slider = document.querySelector(container),        // для обращения к слайдеру и установки свойства\r\n          prev = document.querySelector(prevArrow),\r\n          next = document.querySelector(nextArrow),\r\n          total = document.querySelector(totalCounter),\r\n          current = document.querySelector(currentCounter),\r\n          slidesWrapper = document.querySelector(wrapper),\r\n          slidesField = document.querySelector(field),\r\n          width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;                 // отступ\r\n\r\n    if (slides.length < 10) {                           // инициализация номера\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';                     // картинки в ряд\r\n    slidesField.style.transition = '0.5s all';              // эффект скольжения\r\n\r\n    slidesWrapper.style.overflow = 'hidden';                // скрываем слайды не в области видимости\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol'),\r\n          dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == +width.slice(0, width.length - 2) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += +width.slice(0, width.length - 2);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;   // сдвигаем слайды на отступ\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = +width.slice(0, width.length - 2) * (slides.length - 1);\r\n        } else {\r\n            offset -= +width.slice(0, width.length - 2);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;   // сдвигаем слайды на отступ\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = +width.slice(0, width.length - 2) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;   // сдвигаем слайды на отступ\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            dots.forEach(dot => dot.style.opacity = '.5');\r\n            dots[slideIndex - 1].style.opacity = 1;\r\n        });\r\n    });\r\n\r\n}\r\n\r\nexport default slider;","\r\n\r\nfunction tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    //Tabs\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n            tabsContent = document.querySelectorAll(tabsContentSelector),\r\n            tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    function hideTabContent() {             //скрываем все табы\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {            //показываем нужные табы. по умолчанию поставили 0\r\n        tabsContent[i].classList.add('show', 'fade');       //добавляем классы отображения и анимации\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;                    //присваеваем событие переменной для удобства\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {                 //перебираем табы и раскрываем нужный\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n\r\n    });    \r\n}\r\n\r\nexport default tabs;      // дописываем для экспорта","function timer(id, deadline) {\r\n    //Timer\r\n\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());         // значения в мсек\r\n\r\n        if (t <= 0) {                                           // если отрицательные значения\r\n            days = 0;                                           // то изначально проставляем нули\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),             // мсек * сек * мин * часы\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)),          // считаем остаток от деления, чтобы было меньше 24 часов\r\n              minutes = Math.floor((t / 1000 / 60) % 60),               // считаем остаток в минутах\r\n              seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n        \r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    function getZero(num) {                 // добавляем 0 в однозначных цифрах таймера\r\n        if (num >= 0 && num <10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);        //переменная для обновления счетчика раз в 1 сек\r\n\r\n        updateClock();                                              // обновляем время сразу, чтобы не видеть значения\r\n                                                                    // из вёрстки первую секунду\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {                             //остановка таймера, когда время < 0\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(id, deadline);\r\n}\r\n\r\nexport default timer;      // дописываем для экспорта","const postData = async (url, data) => {     // внутри функции будет асинхронный код\r\n    // await - ставим пред операциями, которые необходимо дождаться\r\n    const res = await fetch(url, {          // возвращаем промис от fetch. асинхронный код\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();              // также ждем окончания работы промиса\r\n};\r\n\r\n\r\n// получаем данные с сервера\r\nasync function getResource(url) {     // внутри функции будет асинхронный код\r\n    let res = await fetch(url);       // await - ставим пред операциями, которые необходимо дождаться\r\n\r\n    if (!res.ok) {\r\n        // объект Ошибка. делаем ее, чтобы пойти в reject в промисе\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    return await res.json();              // также ждем окончания работы промиса\r\n};\r\n\r\n\r\nexport {postData};\r\nexport {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// импортируем файлы в главный\r\nimport tabs from './modules/tabs';\r\nimport modal from './modules/modal';\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport slider from './modules/slider';\r\nimport timer from './modules/timer';\r\nimport {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    // Вызов модального окна по таймеру\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 30000);\r\n\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    calc();\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider-next',    \r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });\r\n    timer('.timer', '2022-12-31');\r\n    \r\n});\r\n"],"names":[],"sourceRoot":""}